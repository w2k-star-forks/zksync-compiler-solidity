name: Build and release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build_linux_amd64:
    runs-on: [self-hosted, ci-runner-compiler]
    container:
      image: matterlabs/llvm_runner:latest
      credentials:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - musl
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}
          submodules: recursive

      - name: Prepare environment
        run: |
          apt update && apt install -y musl-tools
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf ssh://git@github.com/
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf https://github.com/
          rustup target add x86_64-unknown-linux-${{ matrix.target }}

      - name: Build LLVM framework
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: run
          args: --target x86_64-unknown-linux-${{ matrix.target }} --bin llvm-builder

      - name: Build compiler
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: build
          args: --release --target x86_64-unknown-linux-${{ matrix.target }}

      - name: Prepare binary file name
        run: |
          mkdir -p releases/linux-amd64
          mv ./target/x86_64-unknown-linux-${{ matrix.target }}/release/zksolc releases/linux-amd64/zksolc-linux-amd64-${{ matrix.target }}-${{ github.ref_name }}

      - uses: actions/upload-artifact@v3
        with:
          name: release
          path: releases

  prepare-release:
    runs-on: [ self-hosted, ci-runner-compiler ]
    needs:
      - build_linux_amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: release
          path: releases

      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_level: warn
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md

      - name: Prepare release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: false
          name: compiler-solidity ${{ steps.changelog_reader.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
          files: |
            releases/**/**

      - name: Checkout source
        uses: actions/checkout@v3
        with:
          repository: matter-labs/zksolc-bin
          token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}
          submodules: recursive
          path: public_repo
          ref: main

      - name: Emulate pushing to remote branch
        run: |
          chmod -R +x releases/
          cp -R releases/* public_repo/
          cd public_repo
          git config --global user.email "dev-robot@matterlabs.dev"
          git config --global user.name "zksync-admin-bot2"
          git add .
          git commit -m "Release: ${{ steps.changelog_reader.outputs.version }}"
          git push
